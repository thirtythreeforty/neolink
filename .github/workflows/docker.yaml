# A single-shot build-n-pack on Alpine Linux
name: Publish Docker image
on: [push]

jobs:
  push_to_registry:
    name: Build Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Check token is set
        id: vars
        shell: bash
        run: |
            unset HAS_SECRET
            if [ -n $SECRET ]; then HAS_SECRET='true' ; fi
            echo ::set-output name=HAS_SECRET_TOKEN::${HAS_SECRET}
        env:
          SECRET: "${{ secrets.DOCKER_TOKEN }}"
      - name: Check out the repo
        uses: actions/checkout@v2
        if: ${{ steps.vars.outputs.HAS_SECRET_TOKEN }}
      - name: Convert username to lower case for docker
        id: string_user
        uses: ASzc/change-string-case-action@v1
        with:
          string: ${{ github.repository_owner }}
      - name: Convert repo to lower case for docker
        id: string_repo
        uses: ASzc/change-string-case-action@v1
        with:
          string: ${{ github.repository }}
      - name: Set up QEMU
        if: ${{ steps.vars.outputs.HAS_SECRET_TOKEN }}
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        if: ${{ steps.vars.outputs.HAS_SECRET_TOKEN }}
        uses: docker/setup-buildx-action@v1
      - name: Login to dockerhub
        if: ${{ steps.vars.outputs.HAS_SECRET_TOKEN }}
        uses: docker/login-action@v1
        with:
          username: ${{ steps.string_user.outputs.lowercase }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Get tag name
        if: ${{ steps.vars.outputs.HAS_SECRET_TOKEN }}
        id: tags
        run: |
          branch="${GITHUB_REF#refs/heads/}"
          tags="${REPO_NAME}:${branch}"
          if [ "${branch}" == "master" ]; then
            tags="${tags},${REPO_NAME}:latest"
          fi
          echo "::set-output name=TAGS::${tags}"
        env:
          REPO_NAME: ${{ steps.string_repo.outputs.lowercase }}
      - name: Push to Docker Hub Debian
        if: ${{ steps.vars.outputs.HAS_SECRET_TOKEN }}
        uses: docker/build-push-action@v2
        with:
          platforms: linux/arm/v6,linux/arm/v7,linux/arm64/v8,linux/amd64
          push: true
          file: Dockerfile
          tags: ${{ steps.tags.outputs.TAGS }}
