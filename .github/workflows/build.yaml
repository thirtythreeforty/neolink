name: CI

on: [push, pull_request]

jobs:
  builds:
    name: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, windows-2019, macos-10.15]
    steps:
      - uses: actions/checkout@v2
        name: Checkout onto ${{ runner.os }}
      - if: runner.os == 'Linux'
        name: apt install gstreamer
        run: |
          sudo apt update
          sudo apt install -y libgstrtspserver-1.0-dev libgstreamer1.0-dev libgtk2.0-dev
      - if: runner.os == 'Windows'
        name: Install Gstreamer
        run: |
          choco install -y --no-progress gstreamer --version=1.16.2.20200527
          choco install -y --no-progress gstreamer-devel --version=1.16.2
          echo "Updating Cargo environment"
          echo "C:\gstreamer\1.0\x86_64\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          echo "GSTREAMER_1_0_ROOT_X86_64=C:\gstreamer\1.0\x86_64\" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
      - if: runner.os == 'macOS'
        name: Install Gstreamer on MACOS
        run: |
          curl_retry=(
            --connect-timeout 5
            --retry 5
            --retry-delay 0
            --retry-max-time 300
          )
          curl "${curl_retry[@]}" -L 'https://gstreamer.freedesktop.org/data/pkg/osx/1.16.2/gstreamer-1.0-devel-1.16.2-x86_64.pkg' -o "$(pwd)/gstreamer-devel.pkg"
          sudo installer -verbose -pkg "$(pwd)/gstreamer-devel.pkg" -target /
          PKG_CONFIG_PATH="/Library/Frameworks/GStreamer.framework/Versions/1.0/lib/pkgconfig${PKG_CONFIG_PATH:+:$PKG_CONFIG_PATH}"
          echo "PKG_CONFIG_PATH=${PKG_CONFIG_PATH}" >> "${GITHUB_ENV}"
      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all-features
      - uses: actions/upload-artifact@v2
        with:
          name: release-${{ matrix.os }}
          path: "target/release/neolink*"
  armhfbuild:
    name: build-armhf
    runs-on: ubuntu-latest
    container: "node:current-buster-slim"
    steps:
      - uses: actions/checkout@v2
      - name: Install basic tools
        run: |
          apt-get update
          apt-get install --assume-yes --no-install-recommends sudo curl ca-certificates build-essential
      - name: Add armhf as a foreign architecture
        run: |
          sudo dpkg --add-architecture armhf
      - name: Install cross compile tools
        run: |
          sudo apt-get update
          sudo apt-get install --assume-yes --no-install-recommends gcc-arm-linux-gnueabihf
      - name: Install armhf gstreamer
        run: |
          sudo apt-get update
          sudo apt-get install --assume-yes --no-install-recommends \
          libgstrtspserver-1.0-dev:armhf \
          libgstreamer1.0-dev:armhf \
          libgtk2.0-dev:armhf
      - name: Install rustup armv7
        uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            override: true
            target: armv7-unknown-linux-gnueabihf
      - name: Build armfh
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all-features --target=armv7-unknown-linux-gnueabihf
        env:
          CARGO_TARGET_ARMV7_UNKNOWN_LINUX_GNUEABIHF_LINKER: arm-linux-gnueabihf-gcc
          CC_armv7_unknown_linux_gnueabihf: arm-linux-gnueabihf-gcc
          CXX_armv7_unknown_linux_gnueabihf: arm-linux-gnueabihf-g++
          PKG_CONFIG_ALLOW_CROSS: 1
          PKG_CONFIG_PATH: /usr/lib/arm-linux-gnueabihf/pkgconfig:/usr/share/pkgconfig/
          PKG_CONFIG_LIBDIR: /usr/lib/arm-linux-gnueabihf/pkgconfig:/usr/share/pkgconfig/
      - uses: actions/upload-artifact@v2
        with:
          name: release-armhf-buster
          path: "target/armv7-unknown-linux-gnueabihf/release/neolink*"

  arm64build:
    name: build-arm64
    runs-on: ubuntu-latest
    container: "node:current-buster-slim"
    steps:
      - uses: actions/checkout@v2
      - name: Install basic tools
        run: |
          apt-get update
          apt-get install --assume-yes --no-install-recommends sudo curl ca-certificates build-essential
      - name: Add arm64 as a foreign architecture
        run: |
          sudo dpkg --add-architecture arm64
      - name: Install cross compile tools
        run: |
          sudo apt-get update
          sudo apt-get install --assume-yes --no-install-recommends gcc-aarch64-linux-gnu
      - name: Install arm64 gstreamer
        run: |
          sudo apt-get update
          sudo apt-get install --assume-yes --no-install-recommends \
          libgstrtspserver-1.0-dev:arm64 \
          libgstreamer1.0-dev:arm64 \
          libgtk2.0-dev:arm64
      - name: Install rustup arm64
        uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            override: true
            target: aarch64-unknown-linux-gnu
      - name: Build arm64
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all-features --target=aarch64-unknown-linux-gnu
        env:
          CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc
          CC_aarch64_unknown_linux_gnu: aarch64-linux-gnu-gcc
          CXX_aarch64_unknown_linux_gnu: aarch64-linux-gnu-g++
          PKG_CONFIG_ALLOW_CROSS: 1
          PKG_CONFIG_PATH: /usr/lib/aarch64-linux-gnu/pkgconfig:/usr/share/pkgconfig/
          PKG_CONFIG_LIBDIR: /usr/lib/aarch64-linux-gnu/pkgconfig:/usr/share/pkgconfig/
      - uses: actions/upload-artifact@v2
        with:
          name: release-arm64-buster
          path: "target/aarch64-unknown-linux-gnu/release/neolink*"

  i386build:
    name: build-i386
    runs-on: ubuntu-latest
    container: "node:current-buster-slim"
    steps:
      - uses: actions/checkout@v2
      - name: Install basic tools
        run: |
          apt-get update
          apt-get install --assume-yes --no-install-recommends sudo curl ca-certificates build-essential
      - name: Add arm64 as a foreign architecture
        run: |
          sudo dpkg --add-architecture i386
      - name: Install cross compile tools
        run: |
          sudo apt-get update
          sudo apt-get install --assume-yes --no-install-recommends gcc-i686-linux-gnu
      - name: Install i386 gstreamer
        run: |
          sudo apt-get update
          sudo apt-get install --assume-yes --no-install-recommends \
          libgstrtspserver-1.0-dev:i386 \
          libgstreamer1.0-dev:i386 \
          libgtk2.0-dev:i386
      - name: Install rustup i386
        uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            override: true
            target: i686-unknown-linux-gnu
      - name: Build i386
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all-features --target=i686-unknown-linux-gnu
        env:
          CARGO_TARGET_I686_UNKNOWN_LINUX_GNU_LINKER: i686-linux-gnu-gcc
          CC_i686_unknown_linux_gnu: i686-linux-gnu-gcc
          CXX_i686_unknown_linux_gnu: i686-linux-gnu-g++
          PKG_CONFIG_ALLOW_CROSS: 1
          PKG_CONFIG_PATH: /usr/lib/i386-linux-gnu/pkgconfig:/usr/share/pkgconfig/
          PKG_CONFIG_LIBDIR: /usr/lib/i386-linux-gnu/pkgconfig:/usr/share/pkgconfig/
      - uses: actions/upload-artifact@v2
        with:
          name: release-i386-buster
          path: "target/i686-unknown-linux-gnu/release/neolink*"
